/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: rudolfs (https://sketchfab.com/rudolfs)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/felix-the-cat-6c6fa5c8512a4659a37469f869199b1b
Title: Felix The Cat
*/

import React, { useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame, useThree } from "@react-three/fiber";
import { a } from "@react-spring/three";

import felixScene from "../assets/3d/felix_the_cat.glb";

export default function Model({ isRotating, setIsRotating, ...props }) {
  const felixRef = useRef();

  const { gl, viewport } = useThree();
  const { nodes, materials } = useGLTF(felixScene);

  const lastX = useRef(0);
  const rotationSpeed = useRef(0);
  const dampingFactor = 0.95;

  const handlePointerDown = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating(true);

    const clientX = e.touches ? e.touches[0].clientX : e.clientX;

    lastX.current = clientX;
  };
  const handlePointerUp = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating(false);
  };
  const handlePointerMove = (e) => {
    e.stopPropagation();
    e.preventDefault();

    if (isRotating) {
      const clientX = e.touches ? e.touches[0].clientX : e.clientX;

      const delta = (clientX - lastX.current) / viewport.width;

      felixRef.current.rotation.y += delta * 0.01 * Math.PI;
      lastX.current = clientX;
      rotationSpeed.current = delta * 0.01 * Math.PI;
    }
  };

  const handleKeyDown = (e) => {
    if (e.key === "ArrowLeft") {
      if (!isRotating) setIsRotating(true);
      felixRef.current.rotation.y += 0.01 * Math.PI;
    } else if (e.key === "ArrowRight") {
      if (!isRotating) setIsRotating(true);
      felixRef.current.rotation.y -= 0.01 * Math.PI;
    }
  };

  const handleKeyUp = (e) => {
    if (e.key === "ArrowLeft" || e.key === "ArrowRight") {
      setIsRotating(false);
    }
  };

  useFrame(() => {
    if (!isRotating) {
      rotationSpeed.current *= dampingFactor;

      if (Math.abs(rotationSpeed.current) < 0.001) {
        rotationSpeed.current = 0;
      }

      felixRef.current.rotation.y += rotationSpeed.current;
    } else {
      const rotation = felixRef.current.rotation.y;

      const normalizedRotation =
        ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI);

      // Set the current stage based on the island's orientation
      switch (true) {
        case normalizedRotation >= 5.45 && normalizedRotation <= 5.85:
          setCurrentStage(4);
          break;
        case normalizedRotation >= 0.85 && normalizedRotation <= 1.3:
          setCurrentStage(3);
          break;
        case normalizedRotation >= 2.4 && normalizedRotation <= 2.6:
          setCurrentStage(2);
          break;
        case normalizedRotation >= 4.25 && normalizedRotation <= 4.75:
          setCurrentStage(1);
          break;
        default:
          setCurrentStage(null);
      }
    }
  });

  useEffect(() => {
    const canvas = gl.domElement;
    canvas.addEventListener("pointerdown", handlePointerDown);
    canvas.addEventListener("pointerup", handlePointerUp);
    canvas.addEventListener("pointermove", handlePointerMove);
    document.addEventListener("keydown", handleKeyDown);
    document.addEventListener("keyup", handleKeyUp);

    return () => {
      canvas.removeEventListener("pointerdown", handlePointerDown);
      canvas.removeEventListener("pointerup", handlePointerUp);
      canvas.removeEventListener("pointermove", handlePointerMove);
      document.removeEventListener("keydown", handleKeyDown);
      document.removeEventListener("keyup", handleKeyUp);
    };
  }, [gl, handlePointerDown, handlePointerUp, handlePointerMove]);

  return (
    <a.group {...props} ref={felixRef}>
      <group position={[0.661, 0, -4.092]} rotation={[-Math.PI / 2, 0, -0.014]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group
            position={[286.951, 131.071, 455.923]}
            rotation={[-1.553, 0.01, 0.28]}
            scale={100}
          >
            <mesh
              geometry={nodes.Cylinder004_Material_0.geometry}
              material={materials.Material}
            />
            <mesh
              geometry={nodes.Cylinder004_Material001_0.geometry}
              material={materials["Material.001"]}
            />
          </group>
          <group
            position={[269.309, 164.045, 323.266]}
            rotation={[-0.009, -1.212, 2.312]}
            scale={34.188}
          >
            <mesh
              geometry={nodes.Circle001_Material_0.geometry}
              material={materials.Material}
            />
            <mesh
              geometry={nodes.Circle001_Material001_0.geometry}
              material={materials["Material.001"]}
            />
          </group>
          <group
            position={[-321.429, -46.643, 300.785]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={106.436}
          >
            <mesh
              geometry={nodes.Plane_Material_0.geometry}
              material={materials.Material}
            />
            <mesh
              geometry={nodes.Plane_Material001_0.geometry}
              material={materials["Material.001"]}
            />
          </group>
          <group
            position={[305.912, 6.564, -330.045]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          >
            <mesh
              geometry={nodes.Cube008_Material_0.geometry}
              material={materials.Material}
            />
            <mesh
              geometry={nodes.Cube008_Material001_0.geometry}
              material={materials["Material.001"]}
            />
          </group>
          <group
            position={[540.256, 375.965, 486.161]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          >
            <mesh
              geometry={nodes.Cylinder006_Material_0.geometry}
              material={materials.Material}
            />
            <mesh
              geometry={nodes.Cylinder006_Material001_0.geometry}
              material={materials["Material.001"]}
            />
          </group>
          <group
            position={[75.653, -2.203, 385.15]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={92.089}
          >
            <mesh
              geometry={nodes.Cube007_Material_0.geometry}
              material={materials.Material}
            />
            <mesh
              geometry={nodes.Cube007_Material001_0.geometry}
              material={materials["Material.001"]}
            />
          </group>
          <group
            position={[438.132, 126.904, 427.671]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={86.918}
          >
            <mesh
              geometry={nodes.Cube006_Material_0.geometry}
              material={materials.Material}
            />
            <mesh
              geometry={nodes.Cube006_Material001_0.geometry}
              material={materials["Material.001"]}
            />
          </group>
          <group
            position={[265.964, 117.548, 404.491]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={101.991}
          >
            <mesh
              geometry={nodes.Cube005_Material_0.geometry}
              material={materials.Material}
            />
            <mesh
              geometry={nodes.Cube005_Material001_0.geometry}
              material={materials["Material.001"]}
            />
          </group>
          <group
            position={[265.493, 91.524, 47.2]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={92.089}
          >
            <mesh
              geometry={nodes.Cylinder002_Material_0.geometry}
              material={materials.Material}
            />
            <mesh
              geometry={nodes.Cylinder002_Material001_0.geometry}
              material={materials["Material.001"]}
            />
          </group>
          <group
            position={[47.75, -2.203, 47.2]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={92.089}
          >
            <mesh
              geometry={nodes.Cylinder001_Material001_0.geometry}
              material={materials["Material.001"]}
            />
            <mesh
              geometry={nodes.Cylinder001_Material002_0.geometry}
              material={materials["Material.002"]}
            />
          </group>
          <group scale={100}>
            <mesh
              geometry={nodes.Group2064002_Material001_0.geometry}
              material={materials["Material.001"]}
            />
            <mesh
              geometry={nodes.Group2064002_Material_0.geometry}
              material={materials.Material}
            />
          </group>
          <group scale={100}>
            <mesh
              geometry={nodes.Group2064_Material_0.geometry}
              material={materials.Material}
            />
            <mesh
              geometry={nodes.Group2064_Material001_0.geometry}
              material={materials["Material.001"]}
            />
          </group>
          <mesh
            geometry={nodes.Plane002_Material_0.geometry}
            material={materials.Material}
            position={[0.311, 223.604, 161.744]}
            rotation={[1.293, -0.014, 0]}
            scale={11.386}
          />
          <mesh
            geometry={nodes.Plane001_Material001_0.geometry}
            material={materials["Material.001"]}
            position={[505.392, 338.398, -348.609]}
            rotation={[-0.006, -1.362, 1.803]}
            scale={29.691}
          />
          <mesh
            geometry={nodes.Text_Material001_0.geometry}
            material={materials["Material.001"]}
            position={[268.119, 134.149, 328.375]}
            rotation={[-0.006, -1.227, 0.757]}
            scale={26.068}
          />
          <mesh
            geometry={nodes.Circle_Material001_0.geometry}
            material={materials["Material.001"]}
            position={[897.585, 955.021, 327.48]}
            rotation={[1.9, -Math.PI / 2, 0]}
            scale={123.146}
          />
          <mesh
            geometry={nodes.Sphere001_Material001_0.geometry}
            material={materials["Material.001"]}
            position={[47.009, 889.502, 46.787]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={19.726}
          />
          <mesh
            geometry={nodes.Cylinder_Material002_0.geometry}
            material={materials["Material.002"]}
            position={[47.75, -2.203, 47.2]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={92.089}
          />
        </group>
      </group>
    </a.group>
  );
}
